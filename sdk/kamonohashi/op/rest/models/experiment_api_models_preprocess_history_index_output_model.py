# coding: utf-8

"""
    KAMONOHASHI API

    A platform for deep learning  # noqa: E501

    OpenAPI spec version: v2
    Contact: kamonohashi-support@jp.nssol.nipponsteel.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ExperimentApiModelsPreprocessHistoryIndexOutputModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'completed_at': 'str',
        'created_at': 'str',
        'created_by': 'str',
        'data_set_id': 'int',
        'data_set_version_id': 'int',
        'id': 'int',
        'key': 'str',
        'modified_at': 'str',
        'modified_by': 'str',
        'output_data_set_id': 'int',
        'started_at': 'str',
        'status': 'str',
        'status_type': 'str',
        'template_id': 'int'
    }

    attribute_map = {
        'completed_at': 'completedAt',
        'created_at': 'createdAt',
        'created_by': 'createdBy',
        'data_set_id': 'dataSetId',
        'data_set_version_id': 'dataSetVersionId',
        'id': 'id',
        'key': 'key',
        'modified_at': 'modifiedAt',
        'modified_by': 'modifiedBy',
        'output_data_set_id': 'outputDataSetId',
        'started_at': 'startedAt',
        'status': 'status',
        'status_type': 'statusType',
        'template_id': 'templateId'
    }

    def __init__(self, completed_at=None, created_at=None, created_by=None, data_set_id=None, data_set_version_id=None, id=None, key=None, modified_at=None, modified_by=None, output_data_set_id=None, started_at=None, status=None, status_type=None, template_id=None):  # noqa: E501
        """ExperimentApiModelsPreprocessHistoryIndexOutputModel - a model defined in Swagger"""  # noqa: E501

        self._completed_at = None
        self._created_at = None
        self._created_by = None
        self._data_set_id = None
        self._data_set_version_id = None
        self._id = None
        self._key = None
        self._modified_at = None
        self._modified_by = None
        self._output_data_set_id = None
        self._started_at = None
        self._status = None
        self._status_type = None
        self._template_id = None
        self.discriminator = None

        if completed_at is not None:
            self.completed_at = completed_at
        if created_at is not None:
            self.created_at = created_at
        if created_by is not None:
            self.created_by = created_by
        if data_set_id is not None:
            self.data_set_id = data_set_id
        if data_set_version_id is not None:
            self.data_set_version_id = data_set_version_id
        if id is not None:
            self.id = id
        if key is not None:
            self.key = key
        if modified_at is not None:
            self.modified_at = modified_at
        if modified_by is not None:
            self.modified_by = modified_by
        if output_data_set_id is not None:
            self.output_data_set_id = output_data_set_id
        if started_at is not None:
            self.started_at = started_at
        if status is not None:
            self.status = status
        if status_type is not None:
            self.status_type = status_type
        if template_id is not None:
            self.template_id = template_id

    @property
    def completed_at(self):
        """Gets the completed_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501


        :return: The completed_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :rtype: str
        """
        return self._completed_at

    @completed_at.setter
    def completed_at(self, completed_at):
        """Sets the completed_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.


        :param completed_at: The completed_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :type: str
        """

        self._completed_at = completed_at

    @property
    def created_at(self):
        """Gets the created_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501


        :return: The created_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.


        :param created_at: The created_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501


        :return: The created_by of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.


        :param created_by: The created_by of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def data_set_id(self):
        """Gets the data_set_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501


        :return: The data_set_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :rtype: int
        """
        return self._data_set_id

    @data_set_id.setter
    def data_set_id(self, data_set_id):
        """Sets the data_set_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.


        :param data_set_id: The data_set_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :type: int
        """

        self._data_set_id = data_set_id

    @property
    def data_set_version_id(self):
        """Gets the data_set_version_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501


        :return: The data_set_version_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :rtype: int
        """
        return self._data_set_version_id

    @data_set_version_id.setter
    def data_set_version_id(self, data_set_version_id):
        """Sets the data_set_version_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.


        :param data_set_version_id: The data_set_version_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :type: int
        """

        self._data_set_version_id = data_set_version_id

    @property
    def id(self):
        """Gets the id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501


        :return: The id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.


        :param id: The id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def key(self):
        """Gets the key of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501


        :return: The key of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.


        :param key: The key of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :type: str
        """

        self._key = key

    @property
    def modified_at(self):
        """Gets the modified_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501


        :return: The modified_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :rtype: str
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.


        :param modified_at: The modified_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :type: str
        """

        self._modified_at = modified_at

    @property
    def modified_by(self):
        """Gets the modified_by of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501


        :return: The modified_by of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :rtype: str
        """
        return self._modified_by

    @modified_by.setter
    def modified_by(self, modified_by):
        """Sets the modified_by of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.


        :param modified_by: The modified_by of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :type: str
        """

        self._modified_by = modified_by

    @property
    def output_data_set_id(self):
        """Gets the output_data_set_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501


        :return: The output_data_set_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :rtype: int
        """
        return self._output_data_set_id

    @output_data_set_id.setter
    def output_data_set_id(self, output_data_set_id):
        """Sets the output_data_set_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.


        :param output_data_set_id: The output_data_set_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :type: int
        """

        self._output_data_set_id = output_data_set_id

    @property
    def started_at(self):
        """Gets the started_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501


        :return: The started_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :rtype: str
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.


        :param started_at: The started_at of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :type: str
        """

        self._started_at = started_at

    @property
    def status(self):
        """Gets the status of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501


        :return: The status of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.


        :param status: The status of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def status_type(self):
        """Gets the status_type of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501


        :return: The status_type of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :rtype: str
        """
        return self._status_type

    @status_type.setter
    def status_type(self, status_type):
        """Sets the status_type of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.


        :param status_type: The status_type of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :type: str
        """

        self._status_type = status_type

    @property
    def template_id(self):
        """Gets the template_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501


        :return: The template_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :rtype: int
        """
        return self._template_id

    @template_id.setter
    def template_id(self, template_id):
        """Sets the template_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.


        :param template_id: The template_id of this ExperimentApiModelsPreprocessHistoryIndexOutputModel.  # noqa: E501
        :type: int
        """

        self._template_id = template_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ExperimentApiModelsPreprocessHistoryIndexOutputModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ExperimentApiModelsPreprocessHistoryIndexOutputModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
