// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Nssol.Platypus.DataAccess;

namespace Nssol.Platypus.Migrations
{
    [DbContext(typeof(CommonDbContext))]
    [Migration("20200722054159_v2.1.1a")]
    partial class v211a
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Nssol.Platypus.Models.Git", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApiUrl")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<bool>("IsNotEditable");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("RepositoryUrl")
                        .IsRequired();

                    b.Property<int>("ServiceType");

                    b.Property<string>("Token");

                    b.HasKey("Id");

                    b.ToTable("Gits");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.MenuRoleMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<string>("MenuCode")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("MenuCode", "RoleId")
                        .IsUnique();

                    b.ToTable("MenuRoleMaps");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.Node", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessLevel");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<string>("Memo");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("NotebookEnabled");

                    b.Property<string>("Partition");

                    b.Property<bool>("TensorBoardEnabled");

                    b.HasKey("Id");

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.NodeTenantMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("NodeId");

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("NodeId", "TenantId")
                        .IsUnique();

                    b.ToTable("NodeTenantMaps");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.Registry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApiUrl");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<string>("Host")
                        .IsRequired();

                    b.Property<bool>("IsNotEditable");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password");

                    b.Property<int>("PortNo");

                    b.Property<string>("ProjectName");

                    b.Property<string>("RegistryUrl")
                        .IsRequired();

                    b.Property<int>("ServiceType");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Registries");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<string>("DisplayName")
                        .IsRequired();

                    b.Property<bool>("IsNotEditable");

                    b.Property<bool>("IsSystemRole");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("SortOrder");

                    b.Property<long?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.Setting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApiSecurityTokenPass")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<int>("EnsureSingleRow");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ApiSecurityTokenPass")
                        .IsUnique();

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.Storage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessKey")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("NfsRoot")
                        .IsRequired();

                    b.Property<string>("NfsServer")
                        .IsRequired();

                    b.Property<string>("SecretKey")
                        .IsRequired();

                    b.Property<string>("ServerAddress")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Storages");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.Tenant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AvailableInfiniteTimeNotebook");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<long?>("DefaultGitId")
                        .IsRequired();

                    b.Property<long?>("DefaultRegistryId")
                        .IsRequired();

                    b.Property<string>("DisplayName")
                        .IsRequired();

                    b.Property<int?>("LimitCpu");

                    b.Property<int?>("LimitGpu");

                    b.Property<int?>("LimitMemory");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("StorageBucket");

                    b.Property<long?>("StorageId");

                    b.HasKey("Id");

                    b.HasIndex("DefaultGitId");

                    b.HasIndex("DefaultRegistryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("StorageId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantGitMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<long>("GitId");

                    b.Property<bool>("IsEditable");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("GitId");

                    b.HasIndex("TenantId", "GitId")
                        .IsUnique();

                    b.ToTable("TenantGitMaps");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.Data", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<long?>("DisplayId");

                    b.Property<string>("Memo");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long?>("ParentDataId");

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ParentDataId");

                    b.HasIndex("TenantId");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.DataFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<string>("FileName")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("StoredPath")
                        .IsRequired();

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("DataFiles");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.DataProperty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<long?>("DataFileId");

                    b.Property<long>("DataId");

                    b.Property<string>("DataString");

                    b.Property<string>("Key")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("DataFileId");

                    b.HasIndex("DataId");

                    b.HasIndex("TenantId");

                    b.ToTable("DataProperties");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.DataSet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<long?>("DisplayId");

                    b.Property<bool>("IsLocked");

                    b.Property<string>("Memo");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("DataSets");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.DataSetEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<long>("DataId");

                    b.Property<long>("DataSetId");

                    b.Property<long>("DataTypeId");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.HasIndex("DataSetId");

                    b.HasIndex("DataTypeId");

                    b.HasIndex("TenantId");

                    b.ToTable("DataSetEntries");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.DataTagMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<long>("DataId");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("TagId");

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.HasIndex("TagId");

                    b.HasIndex("TenantId");

                    b.ToTable("DataTagMaps");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.DataType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("SortOrder");

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("DataTypes");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.InferenceHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CompletedAt");

                    b.Property<string>("Configuration");

                    b.Property<string>("ContainerImage")
                        .IsRequired();

                    b.Property<long?>("ContainerRegistryId")
                        .IsRequired();

                    b.Property<string>("ContainerTag")
                        .IsRequired();

                    b.Property<int>("Cpu");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<long>("DataSetId");

                    b.Property<long?>("DisplayId");

                    b.Property<string>("EntryPoint")
                        .IsRequired();

                    b.Property<bool>("Favorite");

                    b.Property<int>("Gpu");

                    b.Property<bool>("LocalDataSet");

                    b.Property<string>("LogSummary");

                    b.Property<string>("Memo");

                    b.Property<int>("Memory");

                    b.Property<string>("ModelBranch");

                    b.Property<string>("ModelCommitId")
                        .IsRequired();

                    b.Property<long?>("ModelGitId")
                        .IsRequired();

                    b.Property<string>("ModelRepository")
                        .IsRequired();

                    b.Property<string>("ModelRepositoryOwner")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Node");

                    b.Property<string>("Options");

                    b.Property<string>("Partition");

                    b.Property<DateTime?>("StartedAt");

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<long>("TenantId");

                    b.Property<bool>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("ContainerRegistryId");

                    b.HasIndex("DataSetId");

                    b.HasIndex("TenantId");

                    b.ToTable("InferenceHistories");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.InferenceHistoryAttachedFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<string>("FileName")
                        .IsRequired();

                    b.Property<long>("InferenceHistoryId");

                    b.Property<string>("Key");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("StoredPath")
                        .IsRequired();

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("InferenceHistoryId");

                    b.HasIndex("TenantId");

                    b.ToTable("InferenceHistoryAttachedFiles");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.InferenceHistoryParentMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<long>("InferenceHistoryId");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("ParentId");

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("InferenceHistoryId");

                    b.HasIndex("ParentId");

                    b.HasIndex("TenantId", "InferenceHistoryId", "ParentId")
                        .IsUnique();

                    b.ToTable("InferenceHistoryParentMaps");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.NotebookHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CompletedAt");

                    b.Property<string>("Configuration");

                    b.Property<string>("ContainerImage")
                        .IsRequired();

                    b.Property<long?>("ContainerRegistryId");

                    b.Property<string>("ContainerTag")
                        .IsRequired();

                    b.Property<int>("Cpu");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<long?>("DataSetId");

                    b.Property<long?>("DisplayId");

                    b.Property<string>("EntryPoint");

                    b.Property<int?>("ExpiresIn")
                        .IsRequired();

                    b.Property<bool>("Favorite");

                    b.Property<int>("Gpu");

                    b.Property<bool>("LocalDataSet");

                    b.Property<string>("Memo");

                    b.Property<int>("Memory");

                    b.Property<string>("ModelBranch");

                    b.Property<string>("ModelCommitId");

                    b.Property<long?>("ModelGitId");

                    b.Property<string>("ModelRepository");

                    b.Property<string>("ModelRepositoryOwner");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Node");

                    b.Property<string>("Options");

                    b.Property<string>("Partition");

                    b.Property<DateTime?>("StartedAt");

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ContainerRegistryId");

                    b.HasIndex("DataSetId");

                    b.HasIndex("TenantId");

                    b.ToTable("NotebookHistories");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.NotebookHistoryParentInferenceMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("NotebookHistoryId");

                    b.Property<long>("ParentId");

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("NotebookHistoryId");

                    b.HasIndex("ParentId");

                    b.HasIndex("TenantId", "NotebookHistoryId", "ParentId")
                        .IsUnique();

                    b.ToTable("NotebookHistoryParentInferenceMaps");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.NotebookHistoryParentTrainingMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("NotebookHistoryId");

                    b.Property<long>("ParentId");

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("NotebookHistoryId");

                    b.HasIndex("ParentId");

                    b.HasIndex("TenantId", "NotebookHistoryId", "ParentId")
                        .IsUnique();

                    b.ToTable("NotebookHistoryParentTrainingMaps");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.Preprocess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContainerImage");

                    b.Property<long?>("ContainerRegistryId");

                    b.Property<string>("ContainerTag");

                    b.Property<int>("Cpu");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<long?>("DisplayId");

                    b.Property<string>("EntryPoint");

                    b.Property<int>("Gpu");

                    b.Property<string>("Memo");

                    b.Property<int>("Memory");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("RepositoryBranch");

                    b.Property<string>("RepositoryCommitId");

                    b.Property<long?>("RepositoryGitId");

                    b.Property<string>("RepositoryName");

                    b.Property<string>("RepositoryOwner");

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ContainerRegistryId");

                    b.HasIndex("TenantId");

                    b.ToTable("Preprocesses");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.PreprocessHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CompletedAt");

                    b.Property<string>("ContainerIdentifier");

                    b.Property<int?>("Cpu");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<int?>("Gpu");

                    b.Property<long>("InputDataId");

                    b.Property<string>("Memo");

                    b.Property<int?>("Memory");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Options");

                    b.Property<string>("Partition");

                    b.Property<long?>("PreprocessId");

                    b.Property<DateTime?>("StartedAt");

                    b.Property<string>("Status");

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("InputDataId");

                    b.HasIndex("PreprocessId");

                    b.HasIndex("TenantId");

                    b.ToTable("PreprocessHistories");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.PreprocessHistoryOutput", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("OutputDataId");

                    b.Property<long>("PreprocessHistoryId");

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("OutputDataId");

                    b.HasIndex("PreprocessHistoryId");

                    b.HasIndex("TenantId");

                    b.ToTable("PreprocessHistoryOutputs");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long>("TenantId");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.TensorBoardContainer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<int?>("ExpiresIn")
                        .IsRequired();

                    b.Property<string>("Host");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("PortNo");

                    b.Property<DateTime>("StartedAt");

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<long>("TenantId");

                    b.Property<long>("TrainingHistoryId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("TrainingHistoryId");

                    b.ToTable("TensorBoardContainers");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.TrainingHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CompletedAt");

                    b.Property<string>("Configuration");

                    b.Property<string>("ContainerImage")
                        .IsRequired();

                    b.Property<long?>("ContainerRegistryId")
                        .IsRequired();

                    b.Property<string>("ContainerTag")
                        .IsRequired();

                    b.Property<int>("Cpu");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<long>("DataSetId");

                    b.Property<long?>("DisplayId");

                    b.Property<string>("EntryPoint")
                        .IsRequired();

                    b.Property<bool>("Favorite");

                    b.Property<int>("Gpu");

                    b.Property<bool>("LocalDataSet");

                    b.Property<string>("LogSummary");

                    b.Property<string>("Memo");

                    b.Property<int>("Memory");

                    b.Property<string>("ModelBranch");

                    b.Property<string>("ModelCommitId")
                        .IsRequired();

                    b.Property<long>("ModelGitId");

                    b.Property<string>("ModelRepository")
                        .IsRequired();

                    b.Property<string>("ModelRepositoryOwner")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Node");

                    b.Property<string>("Options");

                    b.Property<string>("Partition");

                    b.Property<string>("Ports");

                    b.Property<DateTime?>("StartedAt");

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<long>("TenantId");

                    b.Property<bool>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("ContainerRegistryId");

                    b.HasIndex("DataSetId");

                    b.HasIndex("TenantId");

                    b.ToTable("TrainingHistories");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.TrainingHistoryAttachedFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<string>("FileName")
                        .IsRequired();

                    b.Property<string>("Key");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("StoredPath")
                        .IsRequired();

                    b.Property<long>("TenantId");

                    b.Property<long>("TrainingHistoryId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("TrainingHistoryId");

                    b.ToTable("TrainingHistoryAttachedFiles");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.TrainingHistoryParentMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("ParentId");

                    b.Property<long>("TenantId");

                    b.Property<long>("TrainingHistoryId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("TrainingHistoryId");

                    b.HasIndex("TenantId", "TrainingHistoryId", "ParentId")
                        .IsUnique();

                    b.ToTable("TrainingHistoryParentMaps");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.TrainingHistoryTagMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("TagId");

                    b.Property<long>("TenantId");

                    b.Property<long>("TrainingHistoryId");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.HasIndex("TenantId");

                    b.HasIndex("TrainingHistoryId");

                    b.ToTable("TrainingHistoryTagMaps");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantRegistryMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<bool>("IsEditable");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("RegistryId");

                    b.Property<long>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("RegistryId");

                    b.HasIndex("TenantId", "RegistryId")
                        .IsUnique();

                    b.ToTable("TenantRegistryMaps");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Alias");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<long>("DefaultTenantId");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password");

                    b.Property<int>("ServiceType");

                    b.HasKey("Id");

                    b.HasIndex("DefaultTenantId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.UserRoleMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("RoleId");

                    b.Property<long?>("TenantMapId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("TenantMapId");

                    b.HasIndex("UserId", "RoleId", "TenantMapId")
                        .IsUnique();

                    b.ToTable("UserRoleMaps");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.UserTenantGitMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<string>("GitToken");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("TenantGitMapId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TenantGitMapId");

                    b.HasIndex("UserId", "TenantGitMapId")
                        .IsUnique();

                    b.ToTable("UserTenantGitMaps");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.UserTenantMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClusterToken");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<long>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "UserId")
                        .IsUnique();

                    b.ToTable("UserTenantMaps");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.UserTenantRegistryMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .IsRequired();

                    b.Property<string>("RegistryPassword");

                    b.Property<string>("RegistryUserName");

                    b.Property<long>("TenantRegistryMapId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TenantRegistryMapId");

                    b.HasIndex("UserId", "TenantRegistryMapId")
                        .IsUnique();

                    b.ToTable("UserTenantRegistryMaps");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.MenuRoleMap", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.NodeTenantMap", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Node", "Node")
                        .WithMany()
                        .HasForeignKey("NodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.Role", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.Tenant", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Git", "DefaultGit")
                        .WithMany()
                        .HasForeignKey("DefaultGitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Registry", "DefaultRegistry")
                        .WithMany()
                        .HasForeignKey("DefaultRegistryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageId");
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantGitMap", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Git", "Git")
                        .WithMany()
                        .HasForeignKey("GitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany("GitMaps")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.Data", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.TenantModels.Data", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentDataId");

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.DataFile", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.DataProperty", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.TenantModels.DataFile", "DataFile")
                        .WithMany()
                        .HasForeignKey("DataFileId");

                    b.HasOne("Nssol.Platypus.Models.TenantModels.Data", "Data")
                        .WithMany("DataProperties")
                        .HasForeignKey("DataId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.DataSet", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.DataSetEntry", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.TenantModels.Data", "Data")
                        .WithMany()
                        .HasForeignKey("DataId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.TenantModels.DataSet", "DataSet")
                        .WithMany("DataSetEntries")
                        .HasForeignKey("DataSetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.TenantModels.DataType", "DataType")
                        .WithMany()
                        .HasForeignKey("DataTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.DataTagMap", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.TenantModels.Data", "Data")
                        .WithMany("TagMaps")
                        .HasForeignKey("DataId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.TenantModels.Tag", "Tag")
                        .WithMany("DataMaps")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.DataType", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.InferenceHistory", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Registry", "ContainerRegistry")
                        .WithMany()
                        .HasForeignKey("ContainerRegistryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.TenantModels.DataSet", "DataSet")
                        .WithMany()
                        .HasForeignKey("DataSetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.InferenceHistoryAttachedFile", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.TenantModels.InferenceHistory", "InferenceHistory")
                        .WithMany("InferenceHistoryAttachedFile")
                        .HasForeignKey("InferenceHistoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.InferenceHistoryParentMap", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.TenantModels.InferenceHistory", "InferenceHistory")
                        .WithMany("ParentMaps")
                        .HasForeignKey("InferenceHistoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.TenantModels.TrainingHistory", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.NotebookHistory", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Registry", "ContainerRegistry")
                        .WithMany()
                        .HasForeignKey("ContainerRegistryId");

                    b.HasOne("Nssol.Platypus.Models.TenantModels.DataSet", "DataSet")
                        .WithMany()
                        .HasForeignKey("DataSetId");

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.NotebookHistoryParentInferenceMap", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.TenantModels.NotebookHistory", "NotebookHistory")
                        .WithMany("ParentInferenceMaps")
                        .HasForeignKey("NotebookHistoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.TenantModels.InferenceHistory", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.NotebookHistoryParentTrainingMap", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.TenantModels.NotebookHistory", "NotebookHistory")
                        .WithMany("ParentTrainingMaps")
                        .HasForeignKey("NotebookHistoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.TenantModels.TrainingHistory", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.Preprocess", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Registry", "ContainerRegistry")
                        .WithMany()
                        .HasForeignKey("ContainerRegistryId");

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.PreprocessHistory", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.TenantModels.Data", "InputData")
                        .WithMany()
                        .HasForeignKey("InputDataId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.TenantModels.Preprocess", "Preprocess")
                        .WithMany()
                        .HasForeignKey("PreprocessId");

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.PreprocessHistoryOutput", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.TenantModels.Data", "OutputData")
                        .WithMany()
                        .HasForeignKey("OutputDataId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.TenantModels.PreprocessHistory", "PreprocessHistory")
                        .WithMany("PreprocessHistoryOutputs")
                        .HasForeignKey("PreprocessHistoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.Tag", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.TensorBoardContainer", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.TenantModels.TrainingHistory", "TrainingHistory")
                        .WithMany()
                        .HasForeignKey("TrainingHistoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.TrainingHistory", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Registry", "ContainerRegistry")
                        .WithMany()
                        .HasForeignKey("ContainerRegistryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.TenantModels.DataSet", "DataSet")
                        .WithMany()
                        .HasForeignKey("DataSetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.TrainingHistoryAttachedFile", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.TenantModels.TrainingHistory", "TrainingHistory")
                        .WithMany("TrainingHistoryAttachedFile")
                        .HasForeignKey("TrainingHistoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.TrainingHistoryParentMap", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.TenantModels.TrainingHistory", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.TenantModels.TrainingHistory", "TrainingHistory")
                        .WithMany("ParentMaps")
                        .HasForeignKey("TrainingHistoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantModels.TrainingHistoryTagMap", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.TenantModels.Tag", "Tag")
                        .WithMany("TrainingHistoryMaps")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.TenantModels.TrainingHistory", "TrainingHistory")
                        .WithMany("TagMaps")
                        .HasForeignKey("TrainingHistoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.TenantRegistryMap", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Registry", "Registry")
                        .WithMany()
                        .HasForeignKey("RegistryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany("RegistryMaps")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.User", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Tenant", "DefaultTenant")
                        .WithMany()
                        .HasForeignKey("DefaultTenantId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.UserRoleMap", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.UserTenantMap", "TenantMap")
                        .WithMany()
                        .HasForeignKey("TenantMapId");

                    b.HasOne("Nssol.Platypus.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.UserTenantGitMap", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.TenantGitMap", "TenantGitMap")
                        .WithMany()
                        .HasForeignKey("TenantGitMapId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.UserTenantMap", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.User", "User")
                        .WithMany("TenantMaps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nssol.Platypus.Models.UserTenantRegistryMap", b =>
                {
                    b.HasOne("Nssol.Platypus.Models.TenantRegistryMap", "TenantRegistryMap")
                        .WithMany()
                        .HasForeignKey("TenantRegistryMapId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nssol.Platypus.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
