// デプロイ先の本番環境に依存しないデフォルトの設定項目はここに書く
// 環境に依存する設定は環境変数に書く
// 環境変数に書く前提のものはコメントアウトしておく
{
  "ActiveDirectoryOptions": {
    //    "Server": "",
    //    "Domain": "",
    //    "BaseOu": "",
    //    "BaseDn": "",
    "LdapFilter": "(&(objectClass=user)(objectClass=person)(sAMAccountName={0}))"
  },
  "ObjectStorageOptions": {
    "PreSignedUrlExpirationSec": "86400"
  },
  "DeployOptions": {
    "Mode": "develop" // 開発時は"develop"。デプロイ時に"production"と環境変数で上書きする
  },
  "WebSecurityOptions": {
    //    "ApiSecurityTokenPass": "",
    "ApiJwtAudience": "PlatypusAudience",
    "ApiJwtIssuer": "PlatypusIssuer",
    "ApiJwtExpirationSec": "864000", // (864,000秒=10日)
    "EnableRequestPiplineDebugLog": "false",
    "EnableSwagger": "true"
  },
  "ContainerManageOptions": {
    "KubernetesHostName": "kubernetes.default.svc.cluster.local", // デバッグ時は環境変数で上書きする。no_proxyのためにFQDNにする
    "ContainerDefaultTimeout": "28800", // (28800秒=8時間)
    "ContainerLabelHostName": "kubernetes.io/hostname",
    "ContainerLabelPartition": "kqi.partition",
    "ContainerLabelTensorBoardEnabled": "kqi.tensorboard",
    "ContainerLabelNotebookEnabled": "kqi.notebook",
    //    "ResourceManageKey": "",
    "TensorBoardImage": "tensorboard",
    //    "WebEndPoint": "",
    "ShellColumns": "200",
    "KubernetesNamespacePrefix": "kube-",
    "KqiNamespacePrefix": "kqi-",
    "KqiAdminNamespace": "kqi-admin"
  },
  "DeleteTensorBoardContainerTimerOptions": {
    "TimeZoneId": "", // 空白なら web-api 稼働マシーンのタイムゾーンを採用, 明示的な設定例としては "Tokyo Standard Time" "UTC" など
    "WeeklyTimeSchedule": "Tue=03:00:00;Wed=03:00:00;Thu=03:00:00;Fri=03:00:00;Sat=03:00:00", // 平日の翌日午前3時に稼働
    "StartingDueTimeSpanSecond": 0 // 初回のみの待機時間を秒で指定, 0 以下なら WeeklyTimeSchedule に従う
  },
  "DeleteNotebookContainerTimerOptions": {
    "TimeZoneId": "", // 空白なら web-api 稼働マシーンのタイムゾーンを採用, 明示的な設定例としては "Tokyo Standard Time" "UTC" など
    "WeeklyTimeSchedule": "Tue=03:00:00;Wed=03:00:00;Thu=03:00:00;Fri=03:00:00;Sat=03:00:00", // 平日の翌日午前3時に稼働
    "StartingDueTimeSpanSecond": 0 // 初回のみの待機時間を秒で指定, 0 以下なら WeeklyTimeSchedule に従う
  },
  "BackupPostgresTimerOptions": {
    "TimeZoneId": "", // 空白なら web-api 稼働マシーンのタイムゾーンを採用, 明示的な設定例としては "Tokyo Standard Time" "UTC" など
    "WeeklyTimeSchedule": "Sun=01:00:00", // 週１回、日曜日の午前1時に稼働
    "StartingDueTimeSpanSecond": 0, // 初回のみの待機時間を秒で指定, 0 以下なら WeeklyTimeSchedule に従う
    "SystemNamespace": "kqi-system",
    "FileSavedPath": "/backup",
    "FileBodyName": "kqi-backup", // バックアップファイル名は kqi-backup-yyyyMMdd.sql となる。
    "MaxNumberOfBackupFiles": 1 // バックアップ・ファイルの最大保存ファイル数は 1 以上の数値を指定する。0 以下なら削除しない。
  },
  "SyncClusterFromDBOptions": { // DB 初期化処理の後に実行されるので最大で 10 秒程度の間隔を指定する
    "TimeZoneId": "", // 空白なら web-api 稼働マシーンのタイムゾーンを採用, 明示的な設定例としては "Tokyo Standard Time" "UTC" など
    "WeeklyTimeSchedule": "", // 空白文字ならスケジューリングは行わない。(StartingDueTimeSpanSecond が指定する初回のみ実行)
    "StartingDueTimeSpanSecond": 10 // 実際に同期させるなら正の整数に指定すること（10 なら web-api 起動の 10 秒後に同期処理)
  },
  "GetKQIReleaseVersionTimerOptions": {
    "TimeZoneId": "", // 空白なら web-api 稼働マシーンのタイムゾーンを採用, 明示的な設定例としては "Tokyo Standard Time" "UTC" など
    "WeeklyTimeSchedule": "Dynamic=00:00:00", // 週１回、初回起動と同じ曜日の時間に稼働
    "StartingDueTimeSpanSecond": 10, // 初回のみの待機時間を秒で指定, 0 以下なら WeeklyTimeSchedule に従う
    "NoCheckVersion": false // バージョン確認をしないかするか。しない場合ture、する場合false。
  },
  "DBInitRetryOptions": { // DB 初期化失敗時の retry パラメータ
    "InitDBRetryMaxCount": 5, // DB 初期化失敗時の retry 最大数
    "InitDBRetrySleepSec": 10, // DB 初期化失敗時の retry 間の sleep 秒
    "SyncObjectStoreRetryMaxCount": 5, // ObjectStore 同期化失敗時の retry 最大数
    "SyncObjectStoreRetrySleepSec": 10, // ObjectStore 同期化失敗時の retry 間の sleep 秒
    "SyncClusterRetryMaxCount": 5, // Cluster 同期化失敗時の retry 最大数
    "SyncClusterRetrySleepSec": 10 // Cluster 同期化失敗時の retry 間の sleep 秒
  },
  "Logging": {
    "IncludeScopes": false,
    "LogLevel": {
      "Default": "Debug",
      "System": "Information",
      "Microsoft": "Information"
    }
  }
}
